{
  "name": "@storacha/encrypt-upload-client",
  "type": "module",
  "version": "1.1.19",
  "license": "Apache-2.0 OR MIT",
  "description": "Client for upload and download encrypted files",
  "author": "Storacha",
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/storacha/upload-service.git",
    "directory": "packages/encrypt-upload-client"
  },
  "keywords": [
    "storacha",
    "lit protocol",
    "web3",
    "storage",
    "upload",
    "store",
    "encrypt",
    "decrypt",
    "IPLD",
    "UCAN",
    "IPFS"
  ],
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist",
    "!dist/**/*.js.map"
  ],
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist/index.js"
    },
    "./factories.node": {
      "import": "./dist/crypto/factories.node.js",
      "require": "./dist/crypto/factories.node.js"
    },
    "./factories.browser": {
      "import": "./dist/crypto/factories.browser.js",
      "require": "./dist/crypto/factories.browser.js"
    },
    "./node": {
      "import": "./dist/crypto/symmetric/node-aes-cbc-crypto.js",
      "require": "./dist/crypto/symmetric/node-aes-cbc-crypto.js"
    },
    "./browser": {
      "import": "./dist/crypto/symmetric/generic-aes-ctr-streaming-crypto.js",
      "require": "./dist/crypto/symmetric/generic-aes-ctr-streaming-crypto.js"
    },
    "./types": "./dist/types.js"
  },
  "scripts": {
    "dev": "tsc --build --watch --preserveWatchOutput",
    "clean": "rm -rf dist *.tsbuildinfo",
    "lint": "tsc --build && eslint '**/*.{js,ts}' --ignore-pattern 'lit-actions/**' && prettier --check '**/*.{js,ts,yml,json}' --ignore-path ../../.gitignore",
    "lint:fix": "tsc --build && eslint '**/*.{js,ts}' --fix && prettier --write '**/*.{js,ts,yml,json}' --ignore-path ../../.gitignore",
    "build-actions": "node lit-actions/esbuild.js",
    "attw": "attw --pack .",
    "prepare-environment": "playwright install",
    "rc": "npm version prerelease --preid rc",
    "test": "node --test $(find test -name '*.spec.js' ! -name '*.playwright.spec.js')",
    "test:setup-certs": "mkdir -p test/mocks/playwright && cd test/mocks/playwright && (test -f cert.key || (npx mkcert create-ca && npx mkcert create-cert --domains localhost 127.0.0.1 ::1))",
    "test:browser": "npm run test:setup-certs && npx playwright test"
  },
  "dependencies": {
    "@ipld/car": "catalog:",
    "@ipld/dag-cbor": "catalog:",
    "@ipld/dag-json": "catalog:",
    "@ipld/dag-ucan": "catalog:",
    "@ipld/schema": "catalog:",
    "@lit-protocol/auth-helpers": "^7.0.2",
    "@lit-protocol/constants": "^7.0.2",
    "@lit-protocol/contracts-sdk": "^7.0.2",
    "@lit-protocol/encryption": "^7.0.2",
    "@lit-protocol/lit-auth-client": "^7.0.3",
    "@lit-protocol/lit-node-client": "^7.0.2",
    "@storacha/capabilities": "workspace:^",
    "@storacha/client": "workspace:^",
    "@storacha/upload-client": "workspace:^",
    "@ucanto/client": "catalog:",
    "@ucanto/core": "catalog:",
    "@ucanto/interface": "catalog:",
    "@ucanto/principal": "catalog:",
    "@ucanto/server": "catalog:",
    "@ucanto/transport": "catalog:",
    "@ucanto/validator": "catalog:",
    "blockstore-core": "catalog:",
    "carstream": "catalog:",
    "dotenv": "^16.4.7",
    "ethers": "5.7.1",
    "ipfs-unixfs-exporter": "catalog:",
    "multiformats": "catalog:"
  },
  "devDependencies": {
    "@lit-protocol/types": "^7.0.8",
    "@playwright/test": "catalog:",
    "@storacha/eslint-config": "workspace:^",
    "esbuild": "^0.25.1",
    "mkcert": "^3.2.0",
    "typescript": "catalog:"
  },
  "eslintConfig": {
    "extends": [
      "@storacha/eslint-config"
    ],
    "parserOptions": {
      "project": "./tsconfig.json"
    },
    "env": {
      "es2022": true,
      "mocha": true,
      "browser": true,
      "node": true
    },
    "ignorePatterns": [
      "dist",
      "docs",
      "docs-generated",
      "coverage",
      "lit-actions",
      "src/types.js",
      "*.min.js",
      "**/*.playwright.spec.js",
      "test/mocks/playwright/**",
      "playwright.config.js",
      "playwright-report/**/*"
    ]
  },
  "depcheck": {
    "ignorePatterns": [
      "dist"
    ],
    "ignores": [
      "@typescript-eslint/eslint-plugin",
      "@typescript-eslint/parser",
      "assert",
      "c8"
    ]
  },
  "engines": {
    "node": ">=18"
  },
  "engineStrict": true
}
